import{_ as r,a as s,b as n,i}from"./chunks/index.ddc307d3.js";import{o as l,c,H as e,w as d,l as t,k as a,a as p,Q as o}from"./chunks/framework.a48fc0d2.js";const _=a("h1",{class:"text-3xl font-bold underline text-[var(--font-accent)]",id:"easynetworkmanager",tabindex:"-1"},[p("EasyNetworkManager "),a("a",{class:"header-anchor",href:"#easynetworkmanager","aria-label":'Permalink to "EasyNetworkManager {.text-3xl .font-bold .underline .text-[var(--font-accent)]}"'},"​")],-1),u=a("p",null," This project is in active development. However, it is working for most users. ",-1),h=o('<p>Open source networking library for Espressif Chip-sets via <code>TCP</code> and <code>UDP</code> protocols.</p><p>Built on-top of <a href="https://github.com/me-no-dev/ESPAsyncWebServer" target="_blank" rel="noreferrer">ESPAsyncWebServer</a>, with logical and efficient abstraction layers for ease of use.</p><p>Plug-and-Play C++ API for custom RESTful APIs.</p><p>This project supports the following boards:</p><ul><li>ESP8266 (all varieties)</li><li>ESP32 (all varieties)</li></ul><div class="info custom-block"><p class="custom-block-title">Note</p><p>Full <code>ESP32C3</code> support is still in development, please report any bugs in the issues section. Of note, this has been successfully tested on all boards except for the <code>ESP32C3</code>. This library fully supports <code>M5Stack</code> devices.</p></div><p>This library provides an embedded WiFiManager html front-end on a customizable URL endpoint.</p><div class="tip custom-block"><p class="custom-block-title">Tip</p><p>This feature can be turned off in favour of your own <a href="/EasyNetworkManager-Docs/library_guide/custom_html_files.html">custom front-end</a>.</p></div>',8),f=o('<p>This library provides numerous key features:</p><ul><li>saving networks to memory</li><li>auto-discovery of saved networks (up to 3 saved wifi networks)</li><li>automatically creating an Access Point if connecting to a wifi network fails</li><li>mDNS support</li><li>Async OTA support <ul><li>OTA endpoint</li></ul></li><li>Sync OTA support</li><li>customizable REST API</li><li>WebSockets</li></ul><p>Want to get started? Check out the <a href="/EasyNetworkManager-Docs/getting_started/things_to_know.html">getting started page</a> and then the <a href="/EasyNetworkManager-Docs/customization/overview.html">customization guide.</a></p><h2 id="contact" tabindex="-1">Contact <a class="header-anchor" href="#contact" aria-label="Permalink to &quot;Contact&quot;">​</a></h2><p>Please join our discord for updates and any questions. We hope to see you there!</p>',5),m=o('<h1 id="licenses" tabindex="-1">Licenses <a class="header-anchor" href="#licenses" aria-label="Permalink to &quot;Licenses&quot;">​</a></h1><p><a href="https://github.com/ZanzyTHEbar/EasyNetworkManager/blob/main/LICENSE" target="_blank" rel="noreferrer"><img src="https://img.shields.io/github/license/RedHawk989/EyeTrackVR?style=plastic" alt="GitHub license"></a></p><p><em><strong>All software is under the <a href="http://opensource.org/licenses/MIT" target="_blank" rel="noreferrer">MIT License</a>. All documentation, including this wiki, is under the Creative Commons CC-BY-SA-4.0 license</strong></em>.</p>',3),v=JSON.parse('{"title":"EasyNetworkManager","description":"","frontmatter":{},"headers":[],"relativePath":"getting_started/intro.md","filePath":"getting_started/intro.md","lastUpdated":1697292541000}'),g={name:"getting_started/intro.md"},S=Object.assign(g,{setup(b){return(k,T)=>(l(),c("div",null,[_,e(r,{options:t(n).user_warning},{content:d(()=>[u]),_:1},8,["options"]),h,e(s,{options:t(i).wifi_manager},null,8,["options"]),f,e(s,{options:t(i).discord_content},null,8,["options"]),m]))}});export{v as __pageData,S as default};
