import{a as o,_ as t,i as p,b as r}from"./chunks/index.ddc307d3.js";import{o as i,c,H as n,l as e,w as y,Q as l,k as s,a}from"./chunks/framework.a48fc0d2.js";const u=l('<h1 class="text-[var(--font-accent)]" id="using-the-library" tabindex="-1">Using the Library <a class="header-anchor" href="#using-the-library" aria-label="Permalink to &quot;Using the Library {.text-[var(--font-accent)]}&quot;">​</a></h1><p>For basic usage examples please see the <a href="https://github.com/ZanzyTHEbar/EasyNetworkManager/tree/main/NetworkManager/examples" target="_blank" rel="noreferrer">examples</a> folder.</p><h2 class="text-[var(--font-accent)]" id="using-the-wifi-manager" tabindex="-1">Using the WiFi Manager <a class="header-anchor" href="#using-the-wifi-manager" aria-label="Permalink to &quot;Using the WiFi Manager {.text-[var(--font-accent)]}&quot;">​</a></h2>',3),d=s("p",null,"Replace the placeholder text with your correct SSID (WiFi access point name), and password respectfully.",-1),b=s("div",{class:"warning custom-block"},[s("p",{class:"custom-block-title"},"WARNING"),s("p",null,[a("Special characters such as "),s("code",null,"!"),a(" and "),s("code",null,"@"),a(" are not officially supported. If you have a special character in your password or ssid, you will need to change it, or use it at your own risk.")]),s("p",null,"Spaces are not supported either. If you have a space in either, you will need to change it.")],-1),D=s("p",null," Make sure your wifi router has a 2.4 GHz band. While most do, this is not always the case. Setting each band (5GHz, and 2.4GHz) to different SSIDs is recommended, though not required. ",-1),h=l(`<p>Double check that you have correctly entered your WiFi credentials and that said wifi network has a <code>2.4GHz</code> band.</p><h2 class="text-[var(--font-accent)]" id="header-files" tabindex="-1">Header Files <a class="header-anchor" href="#header-files" aria-label="Permalink to &quot;Header Files {.text-[var(--font-accent)]}&quot;">​</a></h2><p>The library is split into multiple header files. This is to make it easier to use only the features you need. The header files are as follows:</p><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">EasyNetworkManager.h</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// required</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//* Optional headers</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// NetworkManager headers</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">network/mDNS/MDNSManager.hpp</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">network/ota/OTA.hpp</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">utilities/network_utilities.hpp</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;">// various network utilities</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Development Utility headers</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">utilities/api_utilities.hpp</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">utilities/enuminheritance.hpp</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// used for extending enums with new values</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">utilities/makeunique.hpp</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// used with smart pointers (unique_ptr) to create unique objects</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">utilities/helpers.hpp</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// various helper functions</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 class="text-[var(--font-accent)]" id="classes" tabindex="-1">Classes <a class="header-anchor" href="#classes" aria-label="Permalink to &quot;Classes {.text-[var(--font-accent)]}&quot;">​</a></h2><p>The library is split into multiple classes. This is to make it easier to use only the features you need. The classes are as follows:</p><h3 id="required-classes" tabindex="-1">Required classes <a class="header-anchor" href="#required-classes" aria-label="Permalink to &quot;Required classes&quot;">​</a></h3><p>As our projects grow, we inevitably need to add more features to our projects. This library is designed to make it easy to add new features to your project without having to rewrite your code.</p><p>A projects Config Manager is used to store and retrieve relevant configuration data.</p><p>We provide a default Config Manager that can be used out of the box, or you can create your own Config Manager by extending the <code>CustomConfigInterface</code> class.</p><p>The config manager constructor takes two (optional) parameters:</p><ol><li>The name of the project (used to create the config file name)</li><li>The hostname for your device on the network (used for mDNS, OTA, etc.)</li></ol><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">ProjectConfig configManager</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // default constructor</span></span>
<span class="line"><span style="color:#FFCB6B;">ProjectConfig</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">configManager</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">easynetwork</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">MDNS_HOSTNAME</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> // custom constructor</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>The Config Handler is used to manage the Config Manager.</p><p>The Config Handler constructor takes one parameter:</p><ol><li>A config manager instance.</li></ol><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">ConfigHandler</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">configHandler</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">configManager</span><span style="color:#89DDFF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// The WiFi Handler is used to manage the WiFi connection</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// The WiFi Handler constructor takes four parameters:</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 1. A pointer to the config manager</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 2. A pointer to the WiFi State Manager</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 3. The SSID of the WiFi network to connect to</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 4. The password of the WiFi network to connect to</span></span>
<span class="line"><span style="color:#FFCB6B;">WiFiHandler</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">network</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">configManager</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">WIFI_SSID</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">WIFI_PASSWORD</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// The API Server is used to create a web server</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// that can be used to send commands to the device </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// The API Server constructor takes five parameters:</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 1. The port number to use for the web server</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 2. A pointer to the config manager</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 3. The root path for the API</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 4. The path for the WiFi Manager html page</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 5. The root path for the user commands for the API</span></span>
<span class="line"><span style="color:#FFCB6B;">APIServer</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">server</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">80</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span></span>
<span class="line"><span style="color:#BABED8;">                 </span><span style="color:#FFCB6B;">configManager</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span></span>
<span class="line"><span style="color:#BABED8;">                 </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/api</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span></span>
<span class="line"><span style="color:#BABED8;">                 </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/wifimanager</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span></span>
<span class="line"><span style="color:#BABED8;">                 </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/mycommands</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Optional classes</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">OTA</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">ota</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">configManager</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// The mDNS Manager is used to create a mDNS service for the device</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// The mDNS Manager constructor takes seven parameters:</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 1. A pointer to the mDNS State Manager</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 2. A pointer to the config manager</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 3. The service name</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 4. The service instance name</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 5. The service protocol</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 6. The service description</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 7. The service port</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//! service name and service protocol have to be</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//! lowercase and begin with an underscore</span></span>
<span class="line"><span style="color:#FFCB6B;">MDNSHandler</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">mDNS</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">configManager</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span></span>
<span class="line"><span style="color:#BABED8;">                 </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">_easynetwork</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span></span>
<span class="line"><span style="color:#BABED8;">                 </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span></span>
<span class="line"><span style="color:#BABED8;">                 </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">_tcp</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span></span>
<span class="line"><span style="color:#BABED8;">                 </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">_api_port</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">                  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">80</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br></div></div><p>For more information on the classes, please see the <a href="/EasyNetworkManager-Docs/api_reference.html">API Reference</a>.</p><h3 id="additional-configuration" tabindex="-1">Additional configuration <a class="header-anchor" href="#additional-configuration" aria-label="Permalink to &quot;Additional configuration&quot;">​</a></h3><h4 id="mdns" tabindex="-1"><code>mDNS</code> <a class="header-anchor" href="#mdns" aria-label="Permalink to &quot;\`mDNS\`&quot;">​</a></h4><p>If you do not wish to manually keep track of your device IP address and ports, you can enable (opt-in) the mDNS feature.</p><p>This will allow you to connect to the your device using the following format: <code>http://&lt;some_name&gt;.local</code>. This will only work if you are connected to the same network as the ESPs, and if you have enabled mDNS on your computer. If you are using Windows 10 or later you can enable mDNS by following <a href="./mdns.html">this guide</a>. If you are on MacOS, mDNS is enabled by default. Linux users will need to install <code>avahi-daemon</code> to enable mDNS.</p><h4 id="ota" tabindex="-1"><code>OTA</code> <a class="header-anchor" href="#ota" aria-label="Permalink to &quot;\`OTA\`&quot;">​</a></h4><p>This library supports Asynchronous OTA updates. This means that you can update the firmware without having to connect to the device over Serial by using WiFi.</p><p>Asynchronous OTA updates are enabled by default when the OTA feature is enabled.</p><p>To use Synchronous OTA updates you need to use the <code>OTA</code> header file. More information can be found <a href="/EasyNetworkManager-Docs/library_guide/ota.html">here</a>.</p><h4 id="rest-api" tabindex="-1"><code>REST API</code> <a class="header-anchor" href="#rest-api" aria-label="Permalink to &quot;\`REST API\`&quot;">​</a></h4><p>The firmware also supports a fully featured and customizable RESTful API. This means that you can control the ESPs using a REST API with HTTP requests.</p><p>This feature is used more for advanced users, and is not required for basic operation.</p><p>The REST API can be used by any REST API client, some REST API functionality can only be used by tools like <a href="https://www.thunderclient.com/" target="_blank" rel="noreferrer">Thunder Client</a> or <a href="https://www.postman.com/" target="_blank" rel="noreferrer">Postman</a>, or programmatically communicating with the API.</p><p>The full REST API is documented <a href="/EasyNetworkManager-Docs/library_guide/rest_api.html">here</a>.</p><h2 id="extras" tabindex="-1">Extras <a class="header-anchor" href="#extras" aria-label="Permalink to &quot;Extras&quot;">​</a></h2><h3 class="text-[var(--font-accent)]" id="platformio" tabindex="-1">PlatformIO <a class="header-anchor" href="#platformio" aria-label="Permalink to &quot;PlatformIO {.text-[var(--font-accent)]}&quot;">​</a></h3><p>To see any of the <code>log</code> statements generated by this library - you need to add this to your <code>platformio.ini</code>:</p><div class="language-ini line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F07178;">build_flags</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;"># Add regex support to AsyncWebServer (required)</span></span>
<span class="line"><span style="color:#BABED8;">  -DASYNCWEBSERVER_REGEX</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;"># Enable wifimanager</span></span>
<span class="line"><span style="color:#BABED8;">  -DUSE_WEBMANAGER</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;"># Add this if you want see the debug logs in the serial monitor</span></span>
<span class="line"><span style="color:#BABED8;">  -</span><span style="color:#F07178;">DCORE_DEBUG_LEVEL</span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;">4</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Other optional build parameters</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># If you want to use the ESP Exception Decoder add this:</span></span>
<span class="line"><span style="color:#F07178;">monitor_filters</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span></span>
<span class="line"><span style="color:#BABED8;"> esp32_exception_decoder</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># If you want to build in debug mode add this (it&#39;s not a build flag):</span></span>
<span class="line"><span style="color:#F07178;">build_type</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> debug</span></span>
<span class="line"><span style="color:#F07178;">lib_ldf_mode</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> deep+</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div>`,36),A=JSON.parse('{"title":"Using the Library","description":"","frontmatter":{},"headers":[],"relativePath":"library_guide/configure_library.md","filePath":"library_guide/configure_library.md","lastUpdated":1716127260000}'),m={name:"library_guide/configure_library.md"},_=Object.assign(m,{setup(F){return(f,g)=>(i(),c("div",null,[u,n(o,{options:e(p).wifi_manager},null,8,["options"]),d,b,n(t,{options:e(r).parts_list_one},{content:y(()=>[D]),_:1},8,["options"]),h]))}});export{A as __pageData,_ as default};
