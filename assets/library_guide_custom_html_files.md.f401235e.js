import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.a48fc0d2.js";const d=JSON.parse('{"title":"Custom HTML and Frontend files","description":"","frontmatter":{},"headers":[],"relativePath":"library_guide/custom_html_files.md","filePath":"library_guide/custom_html_files.md","lastUpdated":1697292541000}'),o={name:"library_guide/custom_html_files.md"},e=l(`<h1 class="text-[var(--font-accent)]" id="custom-html-and-frontend-files" tabindex="-1">Custom HTML and Frontend files <a class="header-anchor" href="#custom-html-and-frontend-files" aria-label="Permalink to &quot;Custom HTML and Frontend files {.text-[var(--font-accent)]}&quot;">​</a></h1><p>To use your own frontend files you will need to follow the instructions for your ide. That is beyond the scope of this guide. Please see the documentation for your ide.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>SPIFFS and littleFS tools <strong>do not</strong> work yet in the ArduinoIDE 2.0. Support is coming soon. You can track this in <a href="https://github.com/arduino/arduino-ide/pull/2110" target="_blank" rel="noreferrer">this issue</a>.</p></div><h2 id="using-the-api" tabindex="-1">Using the API <a class="header-anchor" href="#using-the-api" aria-label="Permalink to &quot;Using the API&quot;">​</a></h2><p>The API is very simple. You can use the following functions to set the custom files:</p><div class="info custom-block"><p class="custom-block-title"><strong>Note</strong>:</p><p>The <code>AsyncServer_t</code> is used to create an Asynchronous web server on the device. This is used to generate the WiFi Manager page, and to serve the custom files.</p><p>You can have multiple <code>AsyncServer_t</code> objects, each with it&#39;s own port and endpoints but you can only have one <code>APIServer</code> object per <code>AsyncServer_t</code>. The <code>APIServer</code> object is used to create the API endpoints, and to handle the API requests for the <code>AsyncServer_t</code> object.</p><p>The <code>AsyncServer_t</code> constructor takes five parameters:</p><ol><li>The port number to use for the web server</li><li>A pointer to the <a href="/EasyNetworkManager-Docs/library_guide/configure_library.html">config manager</a></li><li>The root path for the API, this will be your custom API endpoint.</li><li>The path for the WiFi Manager html page, this is not appended to the api path, and is instead used as a root path to generate the WiFi Manager page.</li><li>The root path for <em>custom commands</em> for the API, this <em><strong>is</strong></em> appended to the api path, and is the root path for your custom <a href="/EasyNetworkManager-Docs/library_guide/rest_api.html">RESTful API</a>.</li></ol></div><p>The <code>AsyncServer_t::custom_html_files</code> is a <code>std::vector</code> of <code>UserRoutes_t</code>s. The <code>UserRoutes_t</code> is a <code>struct</code> that contains the following:</p><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">UserRoutes_t</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        // create a constructor to initialize the variables</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">UserRoutes_t</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">string</span><span style="color:#C792EA;">&amp;</span><span style="color:#F07178;"> </span><span style="color:#BABED8;font-style:italic;">endpoint</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">string</span><span style="color:#C792EA;">&amp;</span><span style="color:#F07178;"> </span><span style="color:#BABED8;font-style:italic;">file</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">                     </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">string</span><span style="color:#C792EA;">&amp;</span><span style="color:#F07178;"> </span><span style="color:#BABED8;font-style:italic;">method</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#F07178;">            </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">endpoint</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">move</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">endpoint</span><span style="color:#89DDFF;">)),</span></span>
<span class="line"><span style="color:#F07178;">              </span><span style="color:#82AAFF;">file</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">move</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">file</span><span style="color:#89DDFF;">)),</span></span>
<span class="line"><span style="color:#F07178;">              </span><span style="color:#82AAFF;">method</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">move</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">method</span><span style="color:#89DDFF;">))</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">string endpoint</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">string file</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">string method</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>Example of using the API:</p><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">AsyncServer_t</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">async_server</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">80</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">configHandler</span><span style="color:#BABED8;">.</span><span style="color:#BABED8;font-style:italic;">config</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/api</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/wifimanager</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">                           </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/mycommands</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">APIServer</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">server</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">configHandler</span><span style="color:#BABED8;">.</span><span style="color:#BABED8;font-style:italic;">config</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">async_server</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Set the custom files</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// The first parameter is the url endpoint to access the file</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// The second parameter is the path to the file in SPIFFS/LittleFS</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// The third parameter is the HTTP method to use to access the file</span></span>
<span class="line"><span style="color:#BABED8;">async_server</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">custom_html_files</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">emplace_back</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/helloWorld.html</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">GET</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#BABED8;">async_server</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">custom_html_files</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">emplace_back</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/goodbye</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/goodbye.html</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">POST</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ...</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>To add custom backend logic to your custom frontend files, you can use the <a href="/EasyNetworkManager-Docs/library_guide/rest_api.html">REST API</a>.</p><p>Example:</p><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">void</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">printHelloWorld</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">AsyncWebServerRequest</span><span style="color:#C792EA;">*</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">request</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    Serial</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello World!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#BABED8;">    request</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">send</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">200</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text/plain</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello World!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">setup</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // ...</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // Add the command to the API</span></span>
<span class="line"><span style="color:#BABED8;">server</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addAPICommand</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">helloWorld</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> printHelloWorld</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // ...</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>Now you can call the <code>printHelloWorld</code> function from <code>/hello</code> whenever you access this endpoint, or from your other custom frontend files.</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;">// helloWorld.html</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#82AAFF;">fetch</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/api/helloWorld</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">response</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> response</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">text</span><span style="color:#BABED8;">())</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">data</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(data))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>Allowing you to easily build robust custom web interfaces for your ESPs, with ease.</p>`,16),p=[e];function t(r,c,i,F,y,D){return n(),a("div",null,p)}const m=s(o,[["render",t]]);export{d as __pageData,m as default};
