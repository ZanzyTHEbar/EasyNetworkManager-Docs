import{_ as s,o as n,c as a,Q as e}from"./chunks/framework.4778a1b8.js";const u=JSON.parse('{"title":"REST API","description":"","frontmatter":{},"headers":[],"relativePath":"library_guide/rest_api.md","filePath":"library_guide/rest_api.md","lastUpdated":1697292541000}'),l={name:"library_guide/rest_api.md"},p=e(`<h1 class="text-[var(--font-accent)]" id="rest-api" tabindex="-1">REST API <a class="header-anchor" href="#rest-api" aria-label="Permalink to &quot;REST API {.text-[var(--font-accent)]}&quot;">​</a></h1><h2 id="what-is-it" tabindex="-1">What is it? <a class="header-anchor" href="#what-is-it" aria-label="Permalink to &quot;What is it?&quot;">​</a></h2><p>A RESTful API is a way to communicate with the Asynchronous Server hosted on an ESP device using HTTP requests. This is useful if you want to control the device from a remote location or make custom JS code to control or pass data bi-directionally with the device from a WebUI.</p><p>The <a href="https://github.com/ZanzyTHEbar/EasyNetworkManager/blob/c829234c6ce3d47fc25bfa857a0f19f8950e6748/NetworkManager/include/api/rest_api_handler.hpp#L6" target="_blank" rel="noreferrer"><code>APIServer</code></a> class is used to create the REST API and handle the asynchronous webserver requests. The <code>APIServer</code> class is used in conjunction with the <code>BaseAPI</code> class to create and handle the REST API.</p><h2 id="how-to-use-it" tabindex="-1">How to use it <a class="header-anchor" href="#how-to-use-it" aria-label="Permalink to &quot;How to use it&quot;">​</a></h2><h3 id="rest-api-client" tabindex="-1">REST API Client <a class="header-anchor" href="#rest-api-client" aria-label="Permalink to &quot;REST API Client&quot;">​</a></h3><p>Any REST API client can be used to communicate with the ESP devices. We recommend using <a href="https://www.thunderclient.com/" target="_blank" rel="noreferrer">Thunder Client</a> to test the REST API, as it&#39;s free and is a vscode extension.</p><p>For basic <code>GET</code> requests, you can use your browser of choice.</p><h3 id="standard" tabindex="-1">Standard <a class="header-anchor" href="#standard" aria-label="Permalink to &quot;Standard&quot;">​</a></h3><p>The REST API follows the following standard:</p><div class="language-txt line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">http://{device_name|ip}.local:{device_port}/{custom_api_endpoint}/{builtin|custom_command_endpoint}/command/{command_name}?{param}={value}&amp;{param}={value}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><blockquote><p>For example, if the name of the device is <code>esp32</code> and the <code>APIServer</code> class was instantiated with <code>81</code> as the port number, you can connect to the device using: <code>http://esp32.local:81/api/builtin/command/getStoredConfig</code>. This will return the current config of the device in JSON format.</p></blockquote><h3 id="endpoints" tabindex="-1">Endpoints <a class="header-anchor" href="#endpoints" aria-label="Permalink to &quot;Endpoints&quot;">​</a></h3><h4 id="builtin" tabindex="-1">Builtin <a class="header-anchor" href="#builtin" aria-label="Permalink to &quot;Builtin&quot;">​</a></h4><p>This library comes equipped with a set of builtin endpoints that can be used to control the device. You can also create your own custom endpoints at anytime.</p><div class="info custom-block"><p class="custom-block-title">Note</p><p>Any endpoint marked with <code>**</code> is currently not implemented, and will be implemented in the future.</p><p>If you would like to help us implement these endpoints, please contact us.</p><p>We are also open to suggestions for new endpoints.</p></div><div class="info custom-block"><p class="custom-block-title">Note</p><p>Any endpoint that makes changes to the config will require a call to <code>/save</code> to write the changes to the flash.</p><p>This is to prevent the flash from being written to too often, which can cause the flash to wear out.</p><p>The device will write the changes to the flash and then restart itself after a call to <code>/save</code>.</p></div><p>The REST API has the following endpoints:</p><table><thead><tr><th style="text-align:center;">Endpoint</th><th style="text-align:center;">Method</th><th style="text-align:center;">Description</th></tr></thead><tbody><tr><td style="text-align:center;">/ping</td><td style="text-align:center;">GET</td><td style="text-align:center;">Returns the status of the device.</td></tr><tr><td style="text-align:center;">/save</td><td style="text-align:center;">GET</td><td style="text-align:center;">Writes any changes to the flash.</td></tr><tr><td style="text-align:center;">/restartDevice</td><td style="text-align:center;">GET</td><td style="text-align:center;">Restarts the ESP itself.</td></tr><tr><td style="text-align:center;">/resetConfig</td><td style="text-align:center;">GET</td><td style="text-align:center;">Clears the current config in memory and RAM</td></tr><tr><td style="text-align:center;">/getStoredConfig</td><td style="text-align:center;">GET</td><td style="text-align:center;">Returns a <em>JSON</em> object of the devices current config.</td></tr><tr><td style="text-align:center;">/setTxPower</td><td style="text-align:center;">POST</td><td style="text-align:center;">Sets the Transmission Power of the ESPs</td></tr><tr><td style="text-align:center;">/setDevice</td><td style="text-align:center;">POST</td><td style="text-align:center;">Sets the <code>OTA</code> and <code>mDNS</code> settings</td></tr><tr><td style="text-align:center;">/wifi</td><td style="text-align:center;">POST</td><td style="text-align:center;">Adds a new wifi network, or writes over an existing one</td></tr><tr><td style="text-align:center;">/wifi</td><td style="text-align:center;">DELETE</td><td style="text-align:center;">Deletes a wifi network</td></tr></tbody></table><div class="info custom-block"><p class="custom-block-title">Note</p><p><code>/wifi</code> uses the <code>POST</code> method to add a new wifi network, and the <code>DELETE</code> method to delete a wifi network.</p></div><h3 id="params" tabindex="-1">Params <a class="header-anchor" href="#params" aria-label="Permalink to &quot;Params&quot;">​</a></h3><p>The REST API has the following params:</p><div class="danger custom-block"><p class="custom-block-title">Feature not a bug</p><p>All params for a given URL are required, even if you are not changing that params value.</p><p>If you do not supply a param, that param will be set to default settings.</p></div><p>URL params are passed in the URL as a query string, using the following format:</p><p><code>http://&lt;device_name&gt;.local:81/control/builtin/command/&lt;endpoint&gt;?&lt;param&gt;=&lt;value&gt;&amp;&lt;param&gt;=&lt;value&gt;</code></p><h5 id="wifi" tabindex="-1">/wifi <a class="header-anchor" href="#wifi" aria-label="Permalink to &quot;/wifi&quot;">​</a></h5><div class="info custom-block"><p class="custom-block-title">Note</p><p>We allow you to store up to 3 wifi networks in memory. If you try to add more than 3, the oldest network will be overwritten.</p></div><table><thead><tr><th style="text-align:center;">Param</th><th style="text-align:center;">Description</th></tr></thead><tbody><tr><td style="text-align:center;"><code>ssid</code></td><td style="text-align:center;">The ssid of the network.</td></tr><tr><td style="text-align:center;"><code>password</code></td><td style="text-align:center;">The password of the network.</td></tr><tr><td style="text-align:center;"><code>networkName</code></td><td style="text-align:center;">The unique name (given by you) to refer to that network in memory.</td></tr><tr><td style="text-align:center;"><code>channel</code></td><td style="text-align:center;">The channel for the wifi network to broadcast on <br> only <code>1 - 14</code> are allowed.</td></tr><tr><td style="text-align:center;"><code>power</code></td><td style="text-align:center;">The Transmission power of the ESP for that network config.</td></tr><tr><td style="text-align:center;"><code>adhoc</code></td><td style="text-align:center;">Whether to enable AP mode or not.</td></tr></tbody></table><div class="info custom-block"><p class="custom-block-title">Note - Transmission Power</p><p>You must follow the following format for the <code>power</code> param:</p><p>Using the provided enum, you pass the <em>number</em> to the right of the <code>=</code> sign that corresponds with the power in <code>dBm</code> that you wish to use.</p><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">typedef</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">enum</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">WIFI_POWER_19_5dBm</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">78</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">// 19.5dBm</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">WIFI_POWER_19dBm</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">76</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">// 19dBm</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">WIFI_POWER_18_5dBm</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">74</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">// 18.5dBm</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">WIFI_POWER_17dBm</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">68</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">// 17dBm</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">WIFI_POWER_15dBm</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">60</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">// 15dBm</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">WIFI_POWER_13dBm</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">52</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">// 13dBm</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">WIFI_POWER_11dBm</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">44</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">// 11dBm</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">WIFI_POWER_8_5dBm</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">34</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">// 8.5dBm</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">WIFI_POWER_7dBm</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">28</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">// 7dBm</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">WIFI_POWER_5dBm</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">20</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">// 5dBm</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">WIFI_POWER_2dBm</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">8</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">// 2dBm</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">WIFI_POWER_MINUS_1dBm</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">4</span><span style="color:#676E95;font-style:italic;">// -1dBm</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">wifi_power_t</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h6 id="example-post-request" tabindex="-1">Example Post Request <a class="header-anchor" href="#example-post-request" aria-label="Permalink to &quot;Example Post Request&quot;">​</a></h6><div class="language-txt line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">http://esp32.local:81/api/builtin/command/wifi?ssid=Test&amp;password=Test&amp;networkName=Test_1&amp;channel=1&amp;power=76&amp;adhoc=0</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div><h5 id="setdevice" tabindex="-1">/setDevice <a class="header-anchor" href="#setdevice" aria-label="Permalink to &quot;/setDevice&quot;">​</a></h5><table><thead><tr><th style="text-align:center;">Param</th><th style="text-align:center;">Description</th></tr></thead><tbody><tr><td style="text-align:center;"><code>hostname</code></td><td style="text-align:center;">The hostname for the ESP <br> used by <code>OTA</code> and <code>mDNS</code>.</td></tr><tr><td style="text-align:center;"><code>service</code></td><td style="text-align:center;">The service to look for when scanning <code>mDNS</code> devices on the network <br> this should be set to <code>openiristracker</code> in order to look for <code>EyeTrackVR</code> devices</td></tr><tr><td style="text-align:center;"><code>ota_password</code></td><td style="text-align:center;">The password for the <code>OTA</code> service.</td></tr><tr><td style="text-align:center;"><code>ota_port</code></td><td style="text-align:center;">The port for the <code>OTA</code> service.</td></tr><tr><td style="text-align:center;"><code>firmware_name</code></td><td style="text-align:center;">The name of the binary file for <code>OTA</code> <br> deprecated and will be removed</td></tr></tbody></table><h5 id="settxpower" tabindex="-1">/setTxPower <a class="header-anchor" href="#settxpower" aria-label="Permalink to &quot;/setTxPower&quot;">​</a></h5><div class="info custom-block"><p class="custom-block-title">Note</p><p>You must follow the following format for the <code>txPower</code> param:</p><p>Using the following enum, you pass the <em>number</em> to the right of the <code>=</code> sign.</p><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">typedef</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">enum</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">WIFI_POWER_19_5dBm</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">78</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">// 19.5dBm</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">WIFI_POWER_19dBm</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">76</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">// 19dBm</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">WIFI_POWER_18_5dBm</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">74</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">// 18.5dBm</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">WIFI_POWER_17dBm</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">68</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">// 17dBm</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">WIFI_POWER_15dBm</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">60</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">// 15dBm</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">WIFI_POWER_13dBm</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">52</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">// 13dBm</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">WIFI_POWER_11dBm</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">44</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">// 11dBm</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">WIFI_POWER_8_5dBm</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">34</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">// 8.5dBm</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">WIFI_POWER_7dBm</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">28</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">// 7dBm</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">WIFI_POWER_5dBm</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">20</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">// 5dBm</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">WIFI_POWER_2dBm</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">8</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">// 2dBm</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">WIFI_POWER_MINUS_1dBm</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">4</span><span style="color:#676E95;font-style:italic;">// -1dBm</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">wifi_power_t</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h6 id="example-post-request-1" tabindex="-1">Example Post Request <a class="header-anchor" href="#example-post-request-1" aria-label="Permalink to &quot;Example Post Request&quot;">​</a></h6><div class="language-txt line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">http://esp32.local:81/api/builtin/command/setTxPower?txPower=76</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div><table><thead><tr><th style="text-align:center;">Param</th><th style="text-align:center;">Description</th></tr></thead><tbody><tr><td style="text-align:center;"><code>txPower</code></td><td style="text-align:center;">The power level to set. Must be in format <code>wifi_power_t</code></td></tr></tbody></table><h4 id="custom-endpoints" tabindex="-1">Custom Endpoints <a class="header-anchor" href="#custom-endpoints" aria-label="Permalink to &quot;Custom Endpoints&quot;">​</a></h4><p>You can create your own custom endpoints at any time. To do so, you can use the <code>APIServer::addAPICommand()</code> method.</p><h5 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h5><p>The <code>APIServer::addAPICommand()</code> method uses <code>std::function</code> to create a new endpoint. You can use a lambda function or a function pointer to create a new endpoint. As well as methods from a class.</p><p><strong>Bare Function:</strong></p><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">printHelloWorld</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">AsyncWebServerRequest</span><span style="color:#C792EA;">*</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">request</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    Serial</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello World!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#BABED8;">    request</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">send</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">200</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text/plain</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello World!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Create a new API command</span></span>
<span class="line"><span style="color:#BABED8;">server</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addAPICommand</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> printHelloWorld</span><span style="color:#89DDFF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><strong>Lambda:</strong></p><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// Create a new API command</span></span>
<span class="line"><span style="color:#BABED8;">server</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addAPICommand</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">[](</span><span style="color:#FFCB6B;">AsyncWebServerRequest</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">*</span><span style="color:#BABED8;font-style:italic;">request</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // Get the params from the request</span></span>
<span class="line"><span style="color:#BABED8;">    String param </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> request</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">getParam</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">param</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)-&gt;</span><span style="color:#82AAFF;">value</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // Send the response</span></span>
<span class="line"><span style="color:#BABED8;">    request</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">send</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">200</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text/plain</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello, World!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><strong>Class:</strong></p><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Test</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">void</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">printHelloWorld</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">AsyncWebServerRequest</span><span style="color:#C792EA;">*</span><span style="color:#F07178;"> </span><span style="color:#BABED8;font-style:italic;">request</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#BABED8;">Serial</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello World!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#BABED8;">request</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">send</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">200</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text/plain</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello World!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">Test test</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Create a new API command</span></span>
<span class="line"><span style="color:#BABED8;">server</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addAPICommand</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">bind</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#FFCB6B;">Test</span><span style="color:#89DDFF;">::</span><span style="color:#BABED8;">printHelloWorld</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#BABED8;">test</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">placeholders</span><span style="color:#89DDFF;">::</span><span style="color:#BABED8;">_1</span><span style="color:#89DDFF;">));</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>or</p><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Test</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">void</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">printHelloWorld</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">AsyncWebServerRequest</span><span style="color:#C792EA;">*</span><span style="color:#F07178;"> </span><span style="color:#BABED8;font-style:italic;">request</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#BABED8;">Serial</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello World!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#BABED8;">request</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">send</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">200</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text/plain</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello World!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">Test test</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Create a new API command</span></span>
<span class="line"><span style="color:#BABED8;">server</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addAPICommand</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">[&amp;](</span><span style="color:#FFCB6B;">AsyncWebServerRequest</span><span style="color:#C792EA;">*</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">request</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#BABED8;">    test</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">printHelloWorld</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;">request</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>The RESTful api supports adding new root endpoints as well.</p><p>What does this mean? It means that you can create a new root endpoint, and add new endpoints to that root endpoint.</p><p>As such:</p><div class="language-txt line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">http://{device_name|ip}.local:{device_port}/{custom_api_endpoint}/{custom_command_endpoint}/command/{command_name}?{param}={value}&amp;{param}={value}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Example:</p><div class="language-txt line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">http://esp32.local/api/test/command/helloWorld</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>To do so, you can use the following logic:</p><p>You have access to the <code>BaseAPI::route_t</code> interface, which is used to store the routes and their corresponding handlers.</p><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/* Route Command types */</span></span>
<span class="line"><span style="color:#F78C6C;">using</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">BaseAPI</span><span style="color:#89DDFF;">::</span><span style="color:#BABED8;">route_method </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">void</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">BaseAPI</span><span style="color:#89DDFF;">::*)(</span><span style="color:#BABED8;">AsyncWebServerRequest</span><span style="color:#89DDFF;">*);</span></span>
<span class="line"><span style="color:#F78C6C;">typedef</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#BABED8;">unordered_map</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#BABED8;">string</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> route_method</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">BaseAPI</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">route_t</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>First inherit from the <code>BaseAPI</code> class to create a new root REST API object and add it to the <code>routes_map</code>.</p><p>Then take in a reference to the <code>APIServer</code>, which will give you access to the <code>addRouteMap</code> method of the API.</p><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#BABED8;"> </span><span style="color:#C792EA;">void</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">addRouteMap</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">std</span><span style="color:#89DDFF;">::</span><span style="color:#FFCB6B;">string</span><span style="color:#C792EA;">&amp;</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">index</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">route_t</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">route</span><span style="color:#89DDFF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-cpp line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Test</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">public</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">BaseAPI</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    APIServer</span><span style="color:#89DDFF;">&amp;</span><span style="color:#F07178;"> server</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">Test</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">APIServer</span><span style="color:#C792EA;">&amp;</span><span style="color:#F07178;"> </span><span style="color:#BABED8;font-style:italic;">server</span><span style="color:#89DDFF;">):</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">                </span><span style="color:#82AAFF;">BaseAPI</span><span style="color:#89DDFF;">(),</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">                </span><span style="color:#82AAFF;">server</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">server</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">void</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">begin</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        // Create a new API command map</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#FFCB6B;">route_t</span><span style="color:#F07178;"> test_routes</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        // Reserve space for a select number of routes</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#BABED8;">test_routes</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">reserve</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        // The new command endpoint and the method to call</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#BABED8;">test_routes</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">emplace</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">helloWorld</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#FFCB6B;">Test</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">printHelloWorld</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#BABED8;">test_routes</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">emplace</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">goodbyeWorld</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#FFCB6B;">Test</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">printGoodbyeWorld</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        // Add the routes to the map (the new root endpoint)</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#BABED8;">server</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addRouteMap</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> test_routes</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">void</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">printHelloWorld</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">AsyncWebServerRequest</span><span style="color:#C792EA;">*</span><span style="color:#F07178;"> </span><span style="color:#BABED8;font-style:italic;">request</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#BABED8;">Serial</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello World!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#BABED8;">request</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">send</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">200</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text/plain</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello World!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">void</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">printGoodbyeWorld</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">AsyncWebServerRequest</span><span style="color:#C792EA;">*</span><span style="color:#F07178;"> </span><span style="color:#BABED8;font-style:italic;">request</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#BABED8;">Serial</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">println</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Goodbye World!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#BABED8;">request</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">send</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">200</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text/plain</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Goodbye World!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">APIServer</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">server</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">80</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span></span>
<span class="line"><span style="color:#BABED8;">                 </span><span style="color:#FFCB6B;">configManager</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span></span>
<span class="line"><span style="color:#BABED8;">                 </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/api</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span></span>
<span class="line"><span style="color:#BABED8;">                 </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/wifimanager</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span></span>
<span class="line"><span style="color:#BABED8;">                 </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/mycommands</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">Test</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">test</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">server</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">setup</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // ..</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // Start the server as normal</span></span>
<span class="line"><span style="color:#BABED8;">    server</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">begin</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // Then start the custom API object and inject the new routes</span></span>
<span class="line"><span style="color:#BABED8;">    test</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">begin</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // ..</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br></div></div><p>Now you can access the new endpoints using the following format:</p><div class="language-txt line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">http://esp32.local/api/test/command/helloWorld</span></span>
<span class="line"><span style="color:#babed8;">http://esp32.local/api/test/command/goodbyeWorld</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>`,61),o=[p];function t(r,c,i,y,F,d){return n(),a("div",null,o)}const m=s(l,[["render",t]]);export{u as __pageData,m as default};
